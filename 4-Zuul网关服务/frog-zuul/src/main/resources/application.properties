# 端口
server.port=10010
# 服务名称
spring.application.name=frog-zuul

# 设置与Eureka Server交互的地址，查询服务和注册服务都需要依赖这个地址，多个地址可使用逗号分隔
eureka.client.serviceUrl.defaultZone=http://frog:10000/eureka
# 服务注册中心实例的主机名
eureka.instance.hostname=frog
# 注册中心显示IP地址
# 是否优先使用ip地址作为主机名的标识，默认false
eureka.instance.preferIpAddress=true
# 区分同一服务不同实例的唯一标识，默认值为主机名；本地启动多个实例时可以配置为${spring.application.name}:${random.int}
eureka.instance.instance-id=${spring.cloud.client.ipAddress}:${server.port}


# 设置全局超时时间
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=20000
# 修改默认客户端的调用超时时间，（应该小于断路器hystrix的超时时间，否则没有意义）
ribbon.ReadTimeout=10000
ribbon.ConnectTimeout=5000


# 关闭重试机制
#zuul.retryable=false
#zuul.routes.producer.retryable=false



# 对所有服务不自动创建路由规则
zuul.ignored-services=*
# 路径匹配规则
# ? 匹配任意单个字符
# * 匹配任意数量的字符
# ** 匹配任意数量的字符，支持多级目录
# 当存在多个路由匹配规则被请求路径匹配到时，如需要保证顺序需要用yaml方式按顺序配置

# 忽略表达式，当某个路径不需要被路由时，可以通过一以下配置，（忽略hello路径）
zuul.ignored-patterns=/**/hello/**
# 前缀，前缀不能与path中重复
#zuul.prefix=/frog
# 关闭前缀
zuul.strip-prefix=false
# 关闭指定路由前缀
zuul.routes.feign.stripPrefix=false

# zuul请求路由时会过滤掉http请求中的一些铭感信息：cookie，set-cookie，authorization，无法实现登录和鉴权
# 1 设置全局参数，不过滤铭感信息(不推荐)
#zuul.s-e-c-u-r-i-t-y-h-e-a-d-e-r-s=
# 2 对指定路由开启自定义铭感头
#zuul.routes.producer.customSensitiveHeaders=true
# 3 将指定路由铭感头设置为空
zuul.routes.producer.sensitiveHeaders=

# 进入eureka依赖，通过注册中心服务列表自动路由
zuul.routes.producer.path=/a/**
zuul.routes.producer.serviceId=frog-producer

zuul.routes.feign.path=/b/**
zuul.routes.feign.serviceId=frog-feign
# 以上配置等价于
#zuul.routes.frog-feign=/b/**


# 通过url路由，维护繁琐
#zuul.routes.producter.path=/a/**
#zuul.routes.producter.url=http://frog:10002/
#zuul.routes.feign.path=/b/**
#zuul.routes.feign.url=http://frog:10005/


# 重定向问题(在路由转发前设置host头信息，以标识最初的服务端请求地址)
#zuul.add-host-header=true

# 禁用过滤器（以自定义过滤器为例）
#zuul.MyFilter.pre.disable=true
