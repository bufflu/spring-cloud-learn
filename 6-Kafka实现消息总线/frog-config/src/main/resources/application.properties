spring.application.name=frog-config
server.port=10010


# 【git】 访问配置文件：/{label}/{application}-{profile}.properties
# 仓库位置
#spring.cloud.config.server.git.uri=
# 仓库下相对搜索路径，可以配置多个
#spring.cloud.config.server.git.search-paths=
# 用户名
#spring.cloud.config.server.git.username=
# 密码
#spring.cloud.config.server.git.password=


# 通过本地文件系统（指定位置）
spring.profiles.active=native
spring.cloud.config.server.native.search-locations=classpath:/properties/


# 配置健康监测库（例：git仓库的名字为cheak-config）
#spring.cloud.config.server.git.uri=http://git-repostiories/frog/{application}-config
#spring.cloud.config.server.git.username=
#spring.cloud.config.server.git.password=
#spring.cloud.config.server.health.repositories.check.name=check
#spring.cloud.config.server.health.repositories.check.label=master
#spring.cloud.config.server.health.repositories.check.profiles=dedault
# 禁用健康监测
#spring.cloud.config.server.health.enabled=false



# 属性覆盖：springcloud客户端从config server获取配置信息时，都会获取这些配置信息，利用该特性为客户端配置一些公共的属性
spring.cloud.config.server.overrides.author=frog
spring.cloud.config.server.overrides.version=1.0.0
spring.cloud.config.server.overrides.time=2018-08-28



# 安全保护（添加security依赖）
# 不使用随机密码（不配置默认使用随机密码），使用指定密码
security.user.name=user
security.user.password=1234567890

# 加密解密
# 使用前提：在Oracle官网下载不现场JCE覆盖JRE中/$JAVA_HOME/jre/lib/security目录下内容
# 使用：
# /encrypt/status:查看加密功能状态的端点
# /key:查看秘钥端点
# /encrypt:对请求的body内容进行加密的端点
# /decrypt:对请求的body内容进行解密的端点
# 配置秘钥（对称性秘钥）
#encrypt.key=frog
# 使用加密后的秘钥(配置中信息会对带有{cipher}前缀的值进行解密)
#security.user.password={cipher}dba73984adfa324324dsfte23423
# 非对称加密
# 使用前提：keytool工具  %JAVA_HOME%/bin/keytool.exe
# 说明：默认90天有效期，如需改变可通过命令行指令指定，创建秘钥库完成后会在当前执行目录下生成
#      一个config-server.keystore文件。
# 配置中心配置如下：
#encrypt.key-store.location=file://${user.home}/config-server.keystore
#encrypt.key-store.alias=config-server
#encrypt.key-store.password=111111
#encrypt.key-store.secret=2222
# 以上对应环境变量名均为key的大写，如文件放在src/main/resources目录下可以直接配置
#encrypt.key-store.location=config-server.keystore


# 服务化的配置中心
eureka.client.serviceUrl.defaultZone=http://frog:10000/eureka
# 服务注册中心实例的主机名
eureka.instance.hostname=frog

# 向Config Server发送GET请求方式获取
# 1 不带{lable}分支信息默认方位master分支
# /{application}-{profile}.yml
# /{application}-{profile}.properties
# 2 带分支的信息
# /{label}/{application}-{profile}.yml
# /{label}/{application}-{profile}.yml
# /{application}/{profile}[/{label}]

